'Hidrovia
'CR300 Series
'5Can GPRS - AyV Ultrasonico + CS451 (2-3) 2 minutos de muestras, muestras cada
' 3 segundos
'Para simular valores de entrada asignar el contador a la variable.
'==========CREADO POR JAVIER MOSQUERA======================================
'5 Canales GPRS + AYV mecanico (03002) + CS451
Const tiempoDato = 20 'tiempo de adquisicion
Const tiempoPScan = 3 'tiempo de muestas
Const tiempoAdquisicion = 2 'Periodo de tiempo que se toman muestras para
' realizar el promedio
'==========DECLARACION DE VARIABLES=========================================

Public BattV
Public PTemp_C
Public WSData(3)
Public N(8)
Public CS450(2)
Public Bat_A
Public Bat_B
Public Result
Public contador=20
Public incrementoContador = tiempoPScan/60
Public tiempoPPromedio = tiempoDato - tiempoAdquisicion
Public tiempoScan = tiempoPScan

Alias WSData(1)=WindDir
Alias WSData(2)=WS_kph
Alias WSData(3)=WSDiag
Alias N(1)=SmplsF
Alias N(2)=Diag1F
Alias N(3)=Diag2F
Alias N(4)=Diag4F
Alias N(5)=Diag8F
Alias N(6)=Diag9F
Alias N(7)=Diag10F
Alias N(8)=NNDF
Alias CS450(1)=Lvl_m
Alias CS450(2)=Temp_C

Units BattV=Volts
Units PTemp_C=Deg C
Units WindDir=degrees
Units WS_kph=kilometers/hour
Units WSDiag=unitless
Units Lvl_m=meters
Units Temp_C=deg C
Units Bat_A=V
Units Bat_B=V

'=============DEFINICION DE TABLAS==========================================
DataTable(DIRECCION,True,-1)
  DataInterval(0,tiempoDato,Min,10)
  Sample (1,WindDir,IEEE4)
 
 ' Average (1,WindDir,IEEE4,False)
 ' WindVector (1,WindDir,WindDir,FP2,False,0,0,0)
EndTable

DataTable(VELOCIDAD,True,-1)
  DataInterval(0,tiempoDato,Min,10)
  Average (1,WS_kph,FP2,False)
EndTable

DataTable(NIVEL,True,-1)
	DataInterval(0,tiempoDato,Min,10)
	Average(1,Lvl_m,IEEE4,False)
EndTable

'============TABLASB DE NIVEL AUXILIARES PARA VERIFICACION==================
'==NIVELaux: Hace el promedio en toda la muestra.
'==NIVELmuestra: Toma solo la muestra.

DataTable(NIVELcompleto,True,-1)
	DataInterval(0,tiempoDato,Min,10)
	Average(1,Lvl_m,FP2,False)
EndTable

'==============================================================================

DataTable(BatA,True,-1)             ' Tabla de tension de bateria principal
  DataInterval(0,tiempoDato,Min,10)           ' Tomara datos cada 10 minutos
  Sample(1,Bat_A,FP2)                   ' Tipo y cantidad de repeticiones con los que toma la muestra
EndTable

DataTable(BatB,True,-1)             ' Tabla de tension de bateria secundaria
  DataInterval (0,tiempoDato,Min,10)
  Sample(1,Bat_B,FP2)                   ' Tipo y cantidad de repeticiones con los que toma la muestra
  'Reinicio de contador.
  If IfTime (0,tiempoDato,min) Then contador=0
EndTable

'==============PROGRAMA PRINCIPAL===========================================
BeginProg
  'Main Scan
  Scan(tiempoPScan,Sec,1,0)
    'Incremento de contador.
	  contador=contador+incrementoContador
    'Default CR300 Datalogger Battery Voltage measurement 'BattV'
    Battery(BattV)
    VoltSe (Bat_A,1,mV2500,1,1,0,60,0.006,0)
    VoltSe (Bat_B,1,mV2500,2,1,0,60,0.006,0)


    PanelTemp(PTemp_C,50)
    'WindSonic4 Two Dimensional Sonic Wind Speed & Direction Sensor measurements 'WindDir', 'WS_kph', and 'WSDiag'
    'Get data from WindSonic4
    SDI12Recorder(WindDir,C1,"1","R0!",1,0)
    WS_kph=WS_kph*3.6
    If WindDir=NaN Then
      Move(WS_kph,2,WindDir,1)
    EndIf
    'Set diagnostic variables as needed
    Move(SmplsF,8,0,1)
    Select Case WSDiag
    Case=0
      SmplsF=1
    Case=1
      Diag1F=1
    Case=2
      Diag2F=1
    Case=4
      Diag4F=1
    Case=8
      Diag8F=1
    Case=9
      Diag9F=1
    Case=10
      Diag10F=1
    Else
      NNDF=1
    EndSelect
    'CS450/CS451/CS455/CS456 Pressure Transducer measurements 'Lvl_m' and 'Temp_C'
    SDI12Recorder(Lvl_m,C1,"0","M1!",1,0,-1)
    Lvl_m=Lvl_m*0.70307
    
		'=============HERRAMIENTA PARA ENSAYAR SOFTWARE========================
		'Para verificar el funcionamiento de la variable de nivel, mediante el contador
		'la variable nivel evoluciona proporcionalmente al tiempo.
		
		'Lvl_m=contador
		'======================================================================

    'Envio de Datos a la Base
    If IfTime (0,5,Min) Then
     
     SendVariables (Result,ComRS232,0,4094,0000,0,"Public","Callback",WindDir,0)
     
    EndIf

    '==============LLAMADO DE TABLAS======================================
'Llamado de tablas con muestras limitadas.
If contador > tiempoPPromedio Then 
		'Call Data Tables and Store Data
		If Lvl_m<> NAN Then 'Llamo la tabla cuando el dato no sea nan o una vez por periodo.
		CallTable NIVEL
		ElseIf IfTime(0,tiempoDato,Min)Then
		  CallTable NIVEL
		  EndIf		
		CallTable DIRECCION
		CallTable VELOCIDAD
		CallTable(BatA)
		CallTable(BatB)
	EndIf

'Llamado de tablas totales.
		If Lvl_m<> NAN Then 'Llamo la tabla cuando el dato no sea nan o una vez por periodo.
		CallTable NIVELcompleto
		ElseIf IfTime(0,tiempoDato,Min)Then
		  CallTable NIVELcompleto
		  EndIf	                ' Guardado del dato de bateria secundaria
		  '===================================================================
		  
  NextScan
EndProg
